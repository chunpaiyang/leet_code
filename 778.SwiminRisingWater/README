解題概念:
這題可以從小的 example 開始人腦演算法流程跑一次就會有想法。

舉例來說，我用 3x3 or 4x4 的自建的例子跑起次後，第一個想法是: "如果我每次在選擇下一個 (i,j) 的時候，都是用選最小的方式是不是就是答案 ?"
接近了但不是。"每次該 path 選周圍最小的不會是答案，但全部的可能 path 一起考慮，選周圍最小，是否會是答案 ?"
此外當然還有一些想法，是否要用遞迴解?，資料結構用一個 n^2 的 map 來存走訪過的結果好嗎 ? ... 諸如此類的問題...
當然最經典的就是，如果我要全盤 path 考慮選最小，所以我想到的是用 heap min 來達成每次我都可以選到所有 path 周圍中最小的點。

想法:
先用 greed 算法選擇最小的分叉。(哪個值小就走哪條路)
但如果在某個分叉，發現過去的分叉比現在的還小，那麼先暫時放棄現在的分叉。
則需要先去試過去的分叉。

譬如:
有一條 path 是  : 1 15 23 37 ....
另外一台 path 是: 1 24 ...

則當 走到第一條 path 的 37 時需要停下來去走(展開) 另外一條 path。

因此結構上可以選擇 heap 來保持一個 min heap 來完成。heap 不管在 python or c++ 都是 standard library 的一部分。


